- name: copy db create template
  template: src=keystonedb.sql.j2 dest=/tmp/keystonedb.sql

- name: create database
  shell : mysql -u root < /tmp/keystonedb.sql

- name: remove sql
  file: path=/tmp/keystonedb.sql state=absent

- name: install required packages
  tags: packages
  package: name={{ item }} state=latest
  with_items:
    - openstack-keystone 
    - httpd 
    - mod_wsgi
    - memcached 
    - python-memcached

- name: configure memcached
  template: src=memcached.j2 dest=/etc/sysconfig/memcached

- name: start memcached
  tags: service
  service: name=memcached state=restarted enabled=yes
  when: not ansible_check_mode

- name: install keystone configuration
  tags: config
  template: src=keystone.conf.j2 dest=/etc/keystone/keystone.conf
  when: not ansible_check_mode

- name: run keystone-db sync
  command: keystone-manage db_sync
  become: true
  become_user: keystone
  when: not ansible_check_mode

- name: initialize fernet key repositories
  command: "{{ item }}"
  with_items:
  - "keystone-manage fernet_setup --keystone-user keystone --keystone-group keystone"
  - "keystone-manage credential_setup --keystone-user keystone --keystone-group keystone"

- name: bootstrap the identity service
  shell:
    cmd: | 
      keystone-manage bootstrap --bootstrap-password {{ admin_password }} \
      --bootstrap-admin-url http://{{ ansible_hostname }}:35357/v3/ \
      --bootstrap-internal-url http://{{ ansible_hostname }}:5000/v3/ \
      --bootstrap-public-url http://{{ ansible_hostname }}:5000/v3/ \
      --bootstrap-region-id RegionOne

- name: install httpd config
  tags: config
  copy: src=wsgi-keystone.conf dest=/etc/httpd/conf.d/wsgi-keystone.conf

- name: start httpd
  tags: service
  service: name=httpd state=restarted enabled=yes 
  when: not ansible_check_mode

- name: list projects
  command: "openstack project list"
  register: plist
  when: not ansible_check_mode

- block:
  - command: "openstack project create --domain default --description 'Service Project' service"
  - command: "openstack project create --domain default --description 'Demo Project' demo"
  - command: "openstack user create --domain default --password {{ demo_password }} demo"
  - command: "openstack role create user"
  - command: "openstack role add --project demo --user demo user"
  when: not ansible_check_mode and plist.stdout.find("service") < 0

- name: test admin token
  command: openstack token issue
  register: t

- debug: var=t
